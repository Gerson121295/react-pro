

***** 	Recursos *****
- PlayList React+TypeScript :
 https://www.youtube.com/playlist?list=PLCKuOXG0bPi26-eawizqyLOgM7j66H_4M

- Repositorio del curso:
https://github.com/Klerith/react-bases/tree/rama-counter-by


-- Crear - App React en Typescript
Hp01@DESKTOP-EMF7H53 MINGW64 ~/OneDrive/Escritorio/Cursos/Udemy/react-pro/React+TypeScript (main)
$ npx create-react-app mi-app --template typescript     //Comando a usar: mi-app(nombre de la app)

We suggest that you begin by typing: -> cd mi-app  ->  npm start  -> Navegador escribir: http://localhost:3000/

-En el proyecto mi-app abrir tsconfig.json para eliminar el modo estricto se debe cambiar o eliminar: "strict": true,  
pero no se debe de hacer de lo contraria mejor trabajar con javascript con Typescript nos permitira trabajar de mejor 
manera y ordenada ya que se debera especificar el tipo de dato


-- Crear app React y Typescript usando VITE
C:\Users\Escritorio\react-pro\React+TypeScript
λ npm create vite@latest   --Ejecutar el comando
Need to install the following packages:
create-vite@6.0.1
Ok to proceed? (y) y
√ Project name: ... todo-app		-- Dar nombre al proyecto
√ Select a framework: » React		-- Seleccionar
√ Select a variant: » TypeScript    -- Seleccionar

Done. Now run:
  cd todo-app
  npm install
  npm run dev


- Libreria de animacion:
-- https://gsap.com/   ->Menu -> Docs -> Installation -> npm install gsap

- Patron redux: https://read.reduxbook.com/markdown/part1/04-action-creators.html
- Rutas con React Router V6: https://reactrouter.com/   -> npm i react-router
-- https://reactrouter.com/start/framework/routing
-- https://github.com/Gerson121295/react-0-a-experto/blob/main/10-calendar/src/router/AppRouter.jsx


- Git: git checkout -- .   //por si se borrar algun archivo permite restaurar al ultimo commit realizado


--Ejemplo de rutas React Router V6.12.1 
-- src/routes/Navigation.tsx
import logo from '../logo.svg';
import {
  createBrowserRouter,
  RouterProvider,
  Link,
  Outlet,
  NavLink,
  Navigate,
} from "react-router-dom";
import { About } from "../pages/About";
 
function Root () {
    return (
 
        <div className="main-layout">
            <nav>
                <img src={logo} alt="React log" />
                <ul>
                    <li>
                        <NavLink 
                            to="/home" className={({isActive}) => isActive ? "nav-active" : ""}   
                        >
                            Home
                        </NavLink>
                    </li>
                    <li>
                        <NavLink 
                            to="/about" className={({isActive}) => isActive ? "nav-active" : ""}   
                        >
                            About
                        </NavLink>
                    </li>
                    <li>
                        <NavLink 
                            to="/users" className={({isActive}) => isActive ? "nav-active" : ""}   
                        >
                            Users
                        </NavLink>
                    </li>
                </ul>
            </nav>
            <div id="detail">
                <Outlet />
            </div>
        </div>
    )
}
const router = createBrowserRouter([
    {
        path: "/",
        element: <Root />,
        children: [
            {
                path: "/home",
                element: <h1>Home</h1>
            },
            {
                path: "about",
                element: <h1>About</h1>
            },
            {
                path: "users",
                element: <h1>Users page</h1>,
            }
 
        ]
    },
    {
        path: "/*",
        element: <Navigate to="/home" replace={true} />
    }
]);
  
export const Navigation = () => {
  return (
    <RouterProvider router={router} />
  )
}
 

-- src/App.tsx
import { Navigation } from "./routes/Navigation";
 
function App() {
  return (
    <>
      <Navigation />
    </>
  );
}
 
export default App;









































